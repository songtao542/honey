apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlinx-serialization'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.android.example.github.testing.OpenClass'
}

android {
    signingConfigs {
        release {
            keyAlias 'chunmi'
            keyPassword 'sntchunmi20181107'
            storeFile file('release.key')
            storePassword 'sntchunmi20181107'
        }
        debug {
            keyAlias 'chunmi'
            keyPassword 'sntchunmi20181107'
            storeFile file('release.key')
            storePassword 'sntchunmi20181107'
        }
    }
    compileSdkVersion build_versions.target_sdk
    defaultConfig {
        applicationId "com.snt.phoney"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        //javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "eacade5d281c93bfb55b59d3",
                JPUSH_CHANNEL: "official"
        ]
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }
    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    buildTypes {
        debug {
            defaultConfig {
                minSdkVersion 21
                multiDexEnabled true
            }
            //shrinkResources true
            //minifyEnabled true
            //multiDexKeepFile file('multidex-config.txt')
            //multiDexKeepProguard file('multidex-config.pro')
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
            signingConfig signingConfigs.debug
        }
        release {
            defaultConfig {
                minSdkVersion 21
                multiDexEnabled true
                ndk {
                    abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a'
                }
            }
            //shrinkResources true
            //minifyEnabled true
            //runProguard true
            //multiDexKeepFile file('multidex-config.txt')
            //multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "channel"

    productFlavors {
        official {
            dimension "channel"
            manifestPlaceholders = ["CHANNEL_NAME": "official", "JPUSH_CHANNEL": "official"]
        }
        xiaomi {
            dimension "channel"
            manifestPlaceholders = ["CHANNEL_NAME": "xiaomi", "JPUSH_CHANNEL": "xiaomi"]
        }
        tencent {
            dimension "channel"
            manifestPlaceholders = ["CHANNEL_NAME": "tencent", "JPUSH_CHANNEL": "tencent"]
        }
        aliapp {
            dimension "channel"
            manifestPlaceholders = ["CHANNEL_NAME": "aliapp", "JPUSH_CHANNEL": "aliapp"]
        }
        huawei {
            dimension "channel"
            manifestPlaceholders = ["CHANNEL_NAME": "huawei", "JPUSH_CHANNEL": "huawei"]
        }
        qihoo360 {
            dimension "channel"
            manifestPlaceholders = ["CHANNEL_NAME": "qihoo360", "JPUSH_CHANNEL": "qihoo360"]
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = ["CHANNEL_NAME": name, "JPUSH_CHANNEL": name]
    }

    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }

    kapt {
        useBuildCache = false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        lintConfig rootProject.file('lint.xml')
    }


    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'src/main/res-chat']
            java.srcDirs = ['src/main/java']
        }
    }

}

//configurations.all {
//    resolutionStrategy {
//        force deps.kotlin.stdlib, deps.lifecycle.runtime, deps.lifecycle.extensions, deps.lifecycle.viewmodel, deps.lifecycle.livedata
//    }
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':flexbox')
    implementation project(path: ':swipeback')
    //implementation project(path: ':expandable_layout')
    implementation project(path: ':citypicker')
    implementation project(path: ':zoomimage')
    implementation project(path: ':photopicker')
    implementation project(path: ':rangebar')
    implementation project(path: ':loadmore')
    implementation project(path: ':cameraview')

    // A Map
    implementation(name: 'AMap', ext: 'aar')
    implementation(name: 'alipaySdk-15.5.9-20181123210601', ext: 'aar')
    implementation 'com.tencent.bugly:crashreport:latest.release'

    implementation deps.androidx.concurrent_futures
    implementation deps.androidx.lifecycle_extensions
    implementation deps.androidx.lifecycle_viewmodel
    implementation deps.androidx.lifecycle_viewmodel_ktx
    implementation deps.androidx.lifecycle_livedata
    implementation deps.androidx.lifecycle_runtime
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt deps.androidx.lifecycle_compiler
    implementation deps.androidx.lifecycle_common_java8
    implementation deps.androidx.lifecycle_reactivestreams
    implementation deps.androidx.lifecycle_reactivestreams_ktx
    testImplementation deps.androidx.core_testing
    implementation deps.androidx.room_runtime
    kapt deps.androidx.room_compiler
    implementation deps.androidx.room_rxjava2

    //implementation deps.androidx.room_guava
    testImplementation deps.androidx.room_testing

    //implementation deps.androidx.paging_runtime
    //implementation deps.androidx.paging_runtime_ktx
    //testImplementation deps.androidx.paging_common
    //testImplementation deps.androidx.paging_common_ktx
    //implementation deps.androidx.paging_rxjava2
    //implementation deps.androidx.paging_rxjava2_ktx
    //implementation deps.androidx.navigation_fragment
    //implementation deps.androidx.navigation_fragment_ktx
    //implementation deps.androidx.navigation_ui
    //implementation deps.androidx.navigation_ui_ktx
    //androidTestImplementation deps.androidx.navigation_testing
    //implementation deps.androidx.work_runtime
    //implementation deps.androidx.work_runtime_ktx
    //implementation deps.androidx.work_firebase
    //androidTestImplementation deps.androidx.work_testing
    androidTestImplementation deps.androidx.test_rules
    androidTestImplementation deps.androidx.test_runner
    //androidTestImplementation deps.androidx.espresso_core
    //androidTestImplementation deps.androidx.espresso_contrib
    implementation deps.androidx.core
    implementation deps.androidx.fragment
    implementation deps.androidx.cardview
    implementation deps.androidx.support_v4
    implementation deps.androidx.coordinatorlayout
    implementation deps.androidx.recyclerview
    //implementation deps.androidx.recyclerview_selection
    implementation deps.androidx.annotation
    implementation deps.androidx.vectordrawable
    implementation deps.androidx.vectordrawable_animated
    implementation deps.androidx.swiperefreshlayout
    implementation deps.androidx.transition
    implementation deps.androidx.viewpager
    implementation deps.androidx.appcompat
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.material
    implementation deps.androidx.exifinterface

    implementation deps.androidx.multidex

    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.adapter_rxjava2
    implementation deps.retrofit.coroutines_adapter
    implementation deps.okhttp_logging_interceptor
    implementation deps.glide.runtime
    kapt deps.glide.compiler
    implementation deps.rxjava2
    implementation deps.rx_kotlin
    implementation deps.rx_android
    implementation deps.cache.layer_cache
    implementation deps.cache.layer_cache_android
    implementation deps.cache.layer_cache_serializer
    implementation deps.cache.layercache_ehcache

    //implementation deps.cache.layercache_retrofit
    //implementation deps.cache.layercache_android_encryption
    //implementation deps.cache.layercache_android_livedata

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.android_processor
    kapt deps.dagger.compiler

    implementation deps.kotlin.stdlib
    implementation deps.kotlinx.serialization_runtime
    implementation deps.kotlinx.coroutines_android
    //androidTestImplementation deps.kotlin.reflect
    implementation deps.timber

    implementation deps.location.smart_location
    implementation deps.location.smart_location_rx

    implementation "cn.jiguang.sdk:jpush:3.1.6"
    implementation "cn.jiguang.sdk:jcore:1.2.5"
    implementation 'cn.jiguang.sdk:jmessage:2.7.1'
    implementation 'cn.jiguang.sdk:jmrtc:1.0.2'
    implementation 'com.github.w446108264:AndroidEmoji:1.0.0'
    //implementation 'org.greenrobot:eventbus:3.1.1'
    //implementation 'com.github.w446108264:XhsEmoticonsKeyboard:2.0.4'
    implementation 'com.sina.weibo.sdk:core:4.3.4:openDefaultRelease@aar'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'

    //implementation 'com.umeng.umsdk:common:1.5.4'
    //implementation 'com.umeng.umsdk:utdid:1.1.5.3'
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'

    androidTestImplementation deps.androidx.test_core
    androidTestImplementation deps.androidx.test_rules
    androidTestImplementation deps.androidx.test_runner
    androidTestImplementation deps.androidx.test_junit
    androidTestImplementation deps.androidx.test_uiautomator
    androidTestImplementation deps.androidx.test_espresso_core

    //implementation 'com.idescout.sql:sqlscout-server:4.1'
    //操作 sqlite 的测试库
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
}

jacoco {
    toolVersion = "0.7.4+"
}

task fullCoverageReport(type: JacocoReport) {
    dependsOn 'createDebugCoverageReport'
    dependsOn 'testDebugUnitTest'
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*Test*.*', 'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*_*Factory.class',
                      '**/*ComponentImpl.class',
                      '**/*SubComponentBuilder.class']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

// we need all open to run tests which  a we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}
