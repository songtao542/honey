/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.androidx_futures = "1.0.0-alpha02"
versions.androidx_lifecycle = "2.0.0"
versions.androidx_room = "2.1.0-alpha02"
versions.androidx_paging = "2.1.0-beta01"
versions.androidx_nav = "1.0.0-alpha07"
versions.androidx_work = "1.0.0-alpha10"
versions.androidx_test = "1.1.0"
versions.androidx_espresso = "3.1.0"

versions.androidx_multidex = "2.0.0"

versions.androidx_core = "1.1.0-alpha01"
versions.androidx_viewpager = "1.0.0-alpha1"
versions.androidx_transition = "1.0.0"
versions.androidx_swiperefreshlayout = "1.0.0"
versions.androidx_vectordrawable_animated = "1.0.0"
versions.androidx_vectordrawable = "1.0.1"
versions.androidx_coordinatorlayout = "1.0.0-alpha1"
versions.androidx_legacy_support_v4 = "1.0.0"//"1.0.0-alpha1"
versions.androidx_cardview = "1.0.0"
versions.androidx_fragment = "1.1.0-alpha01"
versions.androidx_recyclerview = "1.0.0"
versions.androidx_annotation = "1.0.0-alpha1"
versions.androidx_appcompat = "1.0.2"
versions.androidx_material = "1.1.0-alpha01"
versions.androidx_constraintlayout = "2.0.0-alpha2"
versions.androidx_exifinterface = "1.0.0"

versions.arch_core = "1.1.1"
versions.room = "1.1.1"
versions.lifecycle = "1.1.1"
versions.support = "27.1.1"
versions.dagger = "2.17"
versions.junit = "4.12"
versions.espresso = "3.0.1"
versions.retrofit = "2.3.0"
versions.retrofit_coroutines_adapter = "0.9.2"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.22.0"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "1.1.3"
versions.glide = "4.8.0"
versions.timber = "4.5.1"
versions.android_gradle_plugin = '3.4.0-alpha09' // '3.3.0-alpha06'
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.rx_kotlin = "2.2.0"
versions.android_support_test = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.kotlin = "1.3.10" //1.2.71
versions.kotlinx_serialization = "0.9.1" //0.6.1
versions.kotlinx_coroutines = "1.0.0"
versions.paging = "1.0.1"
versions.navigation = "1.0.0-alpha06"
versions.work = "1.0.0-alpha09"
versions.layer_cache = "0.4.0"
versions.smart_location = "3.3.3"
versions.multidex = "1.0.3"
versions.gson = "2.8.5"
versions.picasso = "2.71828"
versions.okhttp3 = "3.10.0"
def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
support.vector_drawable = "com.android.support:support-vector-drawable:$versions.support"
deps.support = support

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.viewmodel = "android.arch.lifecycle:viewmodel:$versions.lifecycle"
lifecycle.livedata = "android.arch.lifecycle:livedata:$versions.lifecycle"
lifecycle.reactivestreams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def androidx = [:]
androidx.concurrent_futures = "androidx.concurrent:concurrent-futures:$versions.androidx_futures"
androidx.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"
androidx.lifecycle_viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$versions.androidx_lifecycle" // use -ktx for Kotlin
androidx.lifecycle_viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle" // use -ktx for Kotlin
androidx.lifecycle_livedata = "androidx.lifecycle:lifecycle-livedata:$versions.androidx_lifecycle"
androidx.lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime:$versions.androidx_lifecycle"
androidx.lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidx_lifecycle" // use kapt for Kotlin
androidx.lifecycle_common_java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.androidx_lifecycle"
androidx.lifecycle_reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.androidx_lifecycle" // use -ktx for Kotlin
androidx.lifecycle_reactivestreams_ktx = "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.androidx_lifecycle" // use -ktx for Kotlin
androidx.core_testing = "androidx.arch.core:core-testing:$versions.androidx_lifecycle"

androidx.room_runtime = "androidx.room:room-runtime:$versions.androidx_room"
androidx.room_compiler = "androidx.room:room-compiler:$versions.androidx_room" // use kapt for Kotlin
androidx.room_rxjava2 = "androidx.room:room-rxjava2:$versions.androidx_room"
androidx.room_guava = "androidx.room:room-guava:$versions.androidx_room"
androidx.room_testing = "androidx.room:room-testing:$versions.androidx_room"

androidx.paging_runtime = "androidx.paging:paging-runtime:$versions.androidx_paging" // use -ktx for Kotlin
androidx.paging_runtime_ktx = "androidx.paging:paging-runtime-ktx:$versions.androidx_paging" // use -ktx for Kotlin
androidx.paging_common = "androidx.paging:paging-common:$versions.androidx_paging" // use -ktx for Kotlin
androidx.paging_common_ktx = "androidx.paging:paging-common-ktx:$versions.androidx_paging" // use -ktx for Kotlin
androidx.paging_rxjava2 = "androidx.paging:paging-rxjava2:$versions.androidx_paging" // use -ktx for Kotlin
androidx.paging_rxjava2_ktx = "androidx.paging:paging-rxjava2-ktx:$versions.androidx_paging" // use -ktx for Kotlin

androidx.navigation_fragment = "android.arch.navigation:navigation-fragment:$versions.androidx_nav" // use -ktx for Kotlin
androidx.navigation_fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.androidx_nav" // use -ktx for Kotlin
androidx.navigation_ui = "android.arch.navigation:navigation-ui:$versions.androidx_nav" // use -ktx for Kotlin
androidx.navigation_ui_ktx = "android.arch.navigation:navigation-ui-ktx:$versions.androidx_nav" // use -ktx for Kotlin
androidx.navigation_testing = "android.arch.navigation:navigation-testing:$versions.androidx_nav"

androidx.work_runtime = "android.arch.work:work-runtime:$versions.androidx_work" // use -ktx for Kotlin
androidx.work_runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.androidx_work" // use -ktx for Kotlin
androidx.work_firebase = "android.arch.work:work-firebase:$versions.androidx_work"
androidx.work_testing = "android.arch.work:work-testing:$versions.androidx_work"

androidx.test_rules = "androidx.test:rules:$versions.androidx_test"
androidx.test_runner = "androidx.test:runner:$versions.androidx_test"
androidx.espresso_core = "androidx.test.espresso:espresso-core:$versions.androidx_espresso"
androidx.espresso_contrib = "androidx.test.espresso:espresso-contrib:$versions.androidx_espresso"

androidx.core = "androidx.core:core:$versions.androidx_core"
androidx.fragment = "androidx.fragment:fragment:$versions.androidx_fragment"
androidx.cardview = "androidx.cardview:cardview:$versions.androidx_cardview"
androidx.support_v4 = "androidx.legacy:legacy-support-v4:$versions.androidx_legacy_support_v4"
androidx.coordinatorlayout = "androidx.coordinatorlayout:coordinatorlayout:$versions.androidx_coordinatorlayout"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
androidx.recyclerview_selection = "androidx.recyclerview:recyclerview-selection:$versions.androidx_recyclerview"
androidx.vectordrawable = "androidx.vectordrawable:vectordrawable:$versions.androidx_vectordrawable"
androidx.vectordrawable_animated = "androidx.vectordrawable:vectordrawable-animated:$versions.androidx_vectordrawable_animated"
androidx.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.androidx_swiperefreshlayout"
androidx.transition = "androidx.transition:transition:$versions.androidx_transition"
androidx.viewpager = "androidx.viewpager:viewpager:$versions.androidx_viewpager"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"

androidx.annotation = "androidx.annotation:annotation:$versions.androidx_annotation"

androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
androidx.exifinterface = "androidx.exifinterface:exifinterface:$versions.androidx_exifinterface"

androidx.multidex = "androidx.multidex:multidex:$versions.androidx_multidex"
androidx.material = "com.google.android.material:material:$versions.androidx_material"

androidx.databinding_compiler = "androidx.databinding:databinding-compiler:$versions.android_gradle_plugin"

deps.androidx = androidx

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.coroutines_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit_coroutines_adapter"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def android_support_test = [:]
android_support_test.runner = "com.android.support.test:runner:$versions.android_support_test"
android_support_test.rules = "com.android.support.test:rules:$versions.android_support_test"
deps.android_support_test = android_support_test

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
deps.kotlin = kotlin
deps.paging = "android.arch.paging:runtime:$versions.paging"

def kotlinx = [:]
kotlinx.serialization_runtime = "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$versions.kotlinx_serialization"
kotlinx.serialization_plugin = "org.jetbrains.kotlin:kotlin-serialization:$versions.kotlin"
kotlinx.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx_coroutines"
kotlinx.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx_coroutines"
deps.kotlinx = kotlinx

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "android.arch.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
navigation.testing = "android.arch.navigation:navigation-testing:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def cache = [:]
cache.layer_cache = "com.appmattus:layercache:$versions.layer_cache"
cache.layer_cache_android = "com.appmattus:layercache-android:$versions.layer_cache"
cache.layer_cache_serializer = "com.appmattus:layercache-serializer:$versions.layer_cache"
cache.layercache_ehcache = "com.appmattus:layercache-ehcache:$versions.layer_cache"
cache.layercache_retrofit = "com.appmattus:layercache-retrofit:$versions.layer_cache"
cache.layercache_android_encryption = "com.appmattus:layercache-android-encryption:$versions.layer_cache"
cache.layercache_android_livedata = "com.appmattus:layercache-android-livedata:$versions.layer_cache"
deps.cache = cache

def location = [:]
location.smart_location = "io.nlopez.smartlocation:library:$versions.smart_location"
location.smart_location_rx = "io.nlopez.smartlocation:rx:$versions.smart_location"
deps.location = location

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx_kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rx_kotlin"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.multidex = "com.android.support:multidex:$versions.multidex"

deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.picasso = "com.squareup.picasso:picasso:$versions.picasso"
deps.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp3"

deps.databinding_compiler = "com.android.databinding:compiler:$versions.android_gradle_plugin"

ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://kotlin.bintray.com/kotlinx' }
    handler.maven { url "https://dl.bintray.com/thelasterstar/maven/" }
    handler.maven { url "https://bintray.com/wechat-sdk-team/maven" }
    handler.maven { url "https://jitpack.io" }
    handler.maven { url "http://www.idescout.com/maven/repo/" }
    handler.maven { url 'https://dl.bintray.com/umsdk/release' }
    handler.flatDir { dirs 'libs' }
}

ext.addRepos = this.&addRepos
